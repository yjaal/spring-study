server:
  port: 8080

spring:
  datasource:
    #进行该配置后，每次启动程序，程序都会运行resources/h2db/data.sql文件，对数据库的数据操作。配置了就必须要有相关sql语句，不能为空
    data:
      - classpath:h2db/data.sql
    #进行该配置后，每次启动程序，程序都会运行resources/h2db/schema.sql文件，对数据库的结构进行操作。
    schema:
      - classpath:h2db/schema.sql
    driver-class-name: org.h2.Driver
    url: jdbc:h2:mem:spring_study;DB_CLOSE_DELAY=-1;MODE=MySQL
    username: root
    password: walp1314
    type: com.alibaba.druid.pool.DruidDataSource
    # 初始化大小，最小等待连接数量，最大等待连接数量，最大连接数
    min-idle: 1
    max-active: 20
    # 配置获取连接等待超时的时间
    max-wait: 60000
    initial-size: 1
    # 配置间隔多久才进行一次检测，检测需要关闭的空闲连接，单位是毫秒
    time-between-eviction-runs-millis: 60000
    # 配置一个连接在池中最小生存的时间，单位是毫秒
    min-evictable-idle-time-millis: 300000
    validation-query: SELECT 1 FROM DUAL
    test-while-idle: true
    test-on-borrow: true
    test-on-return: false
    pool-prepared-statements: false
    # 打开PSCache，并且指定每个连接上PSCache的大小
    max-pool-prepared-statement-per-connection-size: 20
    # 配置监控统计拦截的filters，去掉后监控界面sql无法统计，'wall'用于防火墙
    filters: stat,wall,slf4j
    # 通过connectProperties属性来打开mergeSql功能；慢SQL记录
    connectionProperties: druid.stat.mergeSql=true;druid.stat.slowSqlMillis=5000
    # 合并多个DruidDataSource的监控数据
    # use-global-data-source-stat: true


  h2:
    console:
      settings:
        #配置能远程访问
        web-allow-others: true
      #配置访问地址:http://localhost:8080/spring-study/h2-console
      path: /h2-console
      #配置项目启动 h2就启动
      enabled: true

druid:
  allow: #允许登陆的IP地址
    ip: 127.0.0.1
  login: #登陆的账户密码
    user_name: root
    password: root

logging:
  file: ./logs/spring-study-test-test.log
  level:
    root: info
    org.springframework.web: info
  pattern:
    file: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
    console: "%d{dd-MM-yyyy HH:mm:ss.SSS} %magenta([%thread]) %highlight(%-5level) %logger.%M - %msg%n"
    rolling-file-name: "spring-study-dev.%d{dd-MM-yyyy}.log"